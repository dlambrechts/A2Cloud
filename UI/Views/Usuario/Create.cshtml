@model BE.UsuarioBE


@{
    Dictionary<string, BE.IdiomaTraduccionBE> Traducciones = (Dictionary<string, BE.IdiomaTraduccionBE>)Session["Traducciones"];
    ViewBag.Title = Traducciones["NuevoUsuario"].Texto;
}

<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">@Traducciones["NuevoUsuario"].Texto</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group me-2">
                <a>@Html.ActionLink(@Traducciones["Volver"].Texto, "Index", null, new { @class = "btn btn-sm btn-outline-secondary", @type = "button" })</a>
                
            </div>
        </div>
    </div>

    @if (ViewBag.Resultado != null && ViewBag.Resultado == "Existe")
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>Usuario no Creado:</strong> Ya existe un usuario con el mail ingresado
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    <div class="container-fluid">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["Nombre"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["Apellido"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Apellido, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Apellido, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["Email"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Credencial.Mail, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Credencial.Mail, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["Contraseña"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Credencial.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Credencial.Contraseña, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["ConfirmarContraseña"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Credencial.ConfirmarCont, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Credencial.ConfirmarCont, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group col-sm-4">
                    <label class="control-label col-md-4"> @Traducciones["Idioma"].Texto</label>
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Idioma.Id, new SelectList((System.Collections.IEnumerable)ViewData["Idiomas"], "Id", "Descripcion"), new { @class = "form-control" })

                    </div>
                </div>

                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Traducciones["Crear"].Texto" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        </div>
</main>

@section scripts {
    <script>

        window.onload = function () {
            document.getElementById('account-collapse').className = 'show';
            document.getElementById('Usuarios').className = 'btn-activo';
        };
    </script>




}
