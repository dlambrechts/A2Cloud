@model BE.UsuarioBE

@{
    Dictionary<string, BE.IdiomaTraduccionBE> Traducciones = (Dictionary<string, BE.IdiomaTraduccionBE>)Session["Traducciones"];
    ViewBag.Title = Traducciones["CambiarContraseña"].Texto;
}

<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">@Traducciones["CambiarContraseña"].Texto</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group me-2">
    

            </div>
        </div>
    </div>

    <div class="container-fluid">

        @if (ViewBag.Resultado != null && ViewBag.Resultado == "Ok")
        {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <strong>@Traducciones["Correcto"].Texto:</strong> @Traducciones["ContraseñaCambioOk"].Texto
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
        }

        @if (ViewBag.Resultado != null && ViewBag.Resultado == "ContraseñaIncorrecta")
        {
    <div class="alert alert-danger alert-dismissible fade show" role="alert">
        <strong>@Traducciones["Error"].Texto:</strong> @Traducciones["ContraseñaIncorrecta"].Texto
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
        }

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal " style="max-width:500px;">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    <label class="control-label col-md-4"> @Traducciones["ContraseñaActual"].Texto</label>
                    <div class="col-md-10">
                        @Html.TextBox("ContraseñaActual", null, new { @autocomplete = "off", @autofocus = "", @class = "form-control", Type = "Password", @required = "required" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4"> @Traducciones["NuevaContraseña"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Credencial.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Credencial.Contraseña, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label col-md-4"> @Traducciones["ConfirmarContraseña"].Texto</label>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Credencial.ConfirmarCont, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Credencial.ConfirmarCont, "", new { @class = "text-danger" })
                    </div>
                </div>



                <br />

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="@Traducciones["Cambiar"].Texto" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
    </main>

