@model X.PagedList.PagedList<BE.UsuarioBE>
@using X.PagedList.Mvc
@using X.PagedList.Mvc.Common


@{
    Dictionary<string, BE.IdiomaTraduccionBE> Traducciones = (Dictionary<string, BE.IdiomaTraduccionBE>)Session["Traducciones"];
    ViewBag.Title = Traducciones["Usuarios"].Texto;
}

<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">@Traducciones["Usuarios"].Texto</h1>
        <div class="btn-toolbar mb-2 mb-md-0">

            @using (Html.BeginForm())
            {
                <div class="btn-group me-2">
                    <span>
                        @Traducciones["Buscar"].Texto @Html.TextBox("Dato_Buscar", ViewBag.ValorFiltro as string, new { @autocomplete = "off", @autofocus = "" })

                    </span>
                </div>
            }

            <div class="btn-group me-2">
                <a>@Html.ActionLink(@Traducciones["Nuevo"].Texto, "Create", "Usuario", null, new { @class = "btn btn-sm btn-outline-secondary", @type = "button" })</a>
                <button type="button" class="btn btn-sm btn-outline-secondary">@Traducciones["Exportar"].Texto</button>
            </div>

        </div>
    </div>
    <div class="container-fluid">

        @if (ViewBag.Resultado != null && ViewBag.Resultado == "Creado")
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Correcto:</strong> El Usuario fue Creado
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }
        @if (ViewBag.Resultado != null && ViewBag.Resultado == "Editado")
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                <strong>Correcto:</strong> El Usuario  @ViewBag.Usuario fue Editado
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (ViewBag.Resultado != null && ViewBag.Resultado == "Eliminado")
        {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                <strong>Correcto:</strong> El Usuario  @ViewBag.Mail (@ViewBag.Usuario) fue Eliminado
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <table class="table table-hover">
            <thead>
                <tr>
                    <th scope="col">@Html.DisplayNameFor(model => model.First().Id)</th>
                    <th scope="col">@Traducciones["Nombre"].Texto</th>
                    <th scope="col">@Traducciones["Apellido"].Texto</th>
                    <th scope="col">@Traducciones["Email"].Texto</th>
                    <th scope="col">@Traducciones["Activo"].Texto</th>
                    <th scope="col">@Traducciones["Acciones"].Texto</th>

                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)

                {
                    <tr>
                        <th scope="row">@Html.DisplayFor(model => item.Id)</th>
                        <td>@Html.DisplayFor(model => item.Nombre)</td>
                        <td>@Html.DisplayFor(model => item.Apellido)</td>
                        <td>@Html.DisplayFor(model => item.Credencial.Mail)</td>
                        <td>@Html.DisplayFor(model => item.Activo)</td>
                        <td>
                            <a href="@Url.Action("Edit", "Usuario", new {id=item.Id })"><i class="fa fa-edit"></i></a>&ensp;&ensp;
                            <a href="@Url.Action("Delete", "Usuario", new {id=item.Id })"><i class="fa fa-trash"></i></a>&ensp;&ensp;
                            <a href="@Url.Action("Details", "Usuario", new { id = item.Id })"><i class="fa fa-eye"></i></a>&ensp; &ensp;
                            <a href="@Url.Action("EditarPerfilUsuario", "Permisos", new { id = item.Id })"><i class="fa fa-key"></i></a>&ensp; &ensp;
                        </td>

                    </tr>



                }

            </tbody>
        </table>
        <div class="pagination">
            @Html.PagedListPager(Model, pagina => Url.Action("Index", new { pagina, Valor_Filtro = ViewBag.ValorFiltro }),
            new PagedListRenderOptions
            {
                DisplayLinkToIndividualPages = true,
                DisplayPageCountAndCurrentLocation = false,
                MaximumPageNumbersToDisplay = 8,
                LiElementClasses = new string[] { "page-item" },
                PageClasses = new string[] { "page-link" },
            })
        </div>
    </div>
</main>

<script>

    window.onload = function () {
        document.getElementById('account-collapse').className = 'show';
        document.getElementById('Usuarios').className = 'btn-activo';
    };
</script>
