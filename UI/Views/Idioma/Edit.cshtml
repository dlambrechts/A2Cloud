@model BE.IdiomaBE

@{
    Dictionary<string, BE.IdiomaTraduccionBE> Traducciones = (Dictionary<string, BE.IdiomaTraduccionBE>)Session["Traducciones"];
    ViewBag.Title = Traducciones["EditarIdioma"].Texto;
}

<main class="col-md-9 ms-sm-auto col-lg-10 px-md-4">
    <div class="d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom">
        <h1 class="h2">@Traducciones["EditarIdioma"].Texto@Html.DisplayFor(model => model.Descripcion)</h1>
        <div class="btn-toolbar mb-2 mb-md-0">
            <div class="btn-group me-2">
                <a>@Html.ActionLink(Traducciones["Volver"].Texto, "Index", "Idioma", null, new { @class = "btn btn-sm btn-outline-secondary", @type = "button" })</a>
            </div>

        </div>
    </div>
    <div class="container-fluid">


        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal" style="max-width:400px;">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)

            <fieldset disabled>
                <div class="form-group col-sm-4">
                    @Html.LabelFor(model => model.Id, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Id, "", new { @class = "text-danger" })
                    </div>
                </div>
            </fieldset>
            <br />

            <div class="form-group">
                <label class="control-label col-md-2"> @Traducciones["Descripcion"].Texto</label>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />

            @if (Model.PorDefecto == true)
            {
                <fieldset disabled>
                    <div class="form-group">
                        <label class="control-label col-md-2"> @Traducciones["PorDefecto"].Texto</label>
                        <div class="col-md-10">
                            <div class="checkbox">

                                @Html.EditorFor(model => model.PorDefecto)

                                @Html.ValidationMessageFor(model => model.PorDefecto, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </fieldset>}
            @if (Model.PorDefecto == false)
            {

                <div class="form-group">
                    <label class="control-label col-md-2"> @Traducciones["PorDefecto"].Texto</label>
                    <div class="col-md-10">
                        <div class="checkbox">

                            @Html.EditorFor(model => model.PorDefecto)

                            @Html.ValidationMessageFor(model => model.PorDefecto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            }

            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value=" @Traducciones["Guardar"].Texto" class="btn btn-primary" />
                </div>
            </div>
        </div>
        }




</div>

</main>

<script>

    window.onload = function () {
        document.getElementById('idioma-collapse').className = 'show';
        document.getElementById('Idioma').className = 'btn-activo';
    };
</script>